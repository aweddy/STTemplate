//Useful functions and Mixins
@function pxtoem($px, $base: $base-font-size){
  @return ($px / $base) + 0em;
}

@mixin center{
  @include transform(translateX(-50%) translateY(-50%));
  position: absolute;
  top: 50%;
  left: 50%;
}

@mixin maintain-aspect-ratio($width, $height){
  position: relative;
  &:before{
    display: block;
    content: " ";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > .content{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin background-size($size: cover){
  background-size: $size;
  -ms-behavior: url('/library/js/polyfill/backgroundsize.min.htc');
  @if $size == contain {
    background-repeat: no-repeat;
  }
}

@mixin clearfix{
  *zoom: 1;

  &:before, &:after{
    content: " ";
    display: table;
  }

  &:after{
    clear: both;
  };
}

@mixin triangle($side, $width, $height, $color) {
    width: 0;
    height: 0;
    border-style: inset;   
 
    @if ($side == 'top') {
        border-width: 0 ($width/2)+0px $height+0px ($width/2)+0px;
        border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) $color rgba(255, 255, 255, 0);
        border-bottom-style: solid;
    }
    @else if ($side == 'right') {
        border-width: ($height/2)+0px 0 ($height/2)+0px $width+0px;
        border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) $color;
        border-left-style: solid;
    }
    @else if ($side == 'bottom') {
        border-width: $height+0px ($width/2)+0px 0 ($width/2)+0px;
        border-color:$color rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);
        border-top-style: solid;
    }
    @else if ($side == 'left') {
        border-width: ($height/2)+0px $width+0px ($height/2)+0px 0;
        border-color: rgba(255, 255, 255, 0) $color rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);
        border-right-style: solid;
    }
}

//JQuery timing functions:
// EASE IN
$easeInQuad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);
$easeInCubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);
$easeInQuart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);
$easeInQuint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);
$easeInSine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);
$easeInExpo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);
$easeInCirc:      cubic-bezier(0.600,  0.040, 0.980, 0.335);
$easeInBack:      cubic-bezier(0.600, -0.280, 0.735, 0.045);

// EASE OUT
$easeOutQuad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);
$easeOutCubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);
$easeOutQuart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);
$easeOutQuint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);
$easeOutSine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);
$easeOutExpo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);
$easeOutCirc:     cubic-bezier(0.075,  0.820, 0.165, 1.000);
$easeOutBack:     cubic-bezier(0.175,  0.885, 0.320, 1.275);

// EASE IN OUT
$easeInOutQuad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);
$easeInOutCubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);
$easeInOutQuart: cubic-bezier(0.770,  0.000, 0.175, 1.000);
$easeInOutQuint: cubic-bezier(0.860,  0.000, 0.070, 1.000);
$easeInOutSine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);
$easeInOutExpo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);
$easeInOutCirc:  cubic-bezier(0.785,  0.135, 0.150, 0.860);
$easeInOutBack:  cubic-bezier(0.680, -0.550, 0.265, 1.550);


@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values...) {
  $base: 10;
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value * $base}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}

@mixin hide-scrollbar() {
  .touch & {
    &::-webkit-scrollbar {
      width: 0 !important;
    }  
    -ms-overflow-style: none;
    overflow: -moz-scrollbars-none;
  }
}